#include <iostream>

int main() {
	setlocale(LC_ALL, "Russian");
	int n,m;

	// Нейтральный адрес
	
	int* pointer;
	//// pointer = 0; // рабочий, но не удобный способ
	//
	//// pointer = NULL; // более удобный способ (инициализации указателя), но по факту - костыль
	pointer = nullptr; // самый эффективный и правильный способ создания нейтрального указателя
	if (pointer != nullptr)
		std::cout << pointer << std::endl;
	else
		std::cout << "Указатель не инициализирован\n\n";

	// Модификации доступа указателей
	
	n = 7;

	//------------------------------------------------------------------------
	// указатель на константу. Может быть объявлен не инициализированным и
	// перенаправляться на другие области памяти, но с его помощью НЕВОЗМЖНО
	// поменять значение памяти, на которую он направлен
	const int* pn1;
	pn1 = &n;

	//*pn1 = 5; //ошибка!!!

	std::cout << *pn1 << std::endl;

	//-------------------------------------------------------------------------
	// константный указатель или указатель-константа.
	// не может быть объявлен без инициализации и не может быть
	// направлен на другие области памяти, но с его помощью
	// МОЖНО менять значение памяти на которую он направлен
	int* const pn2 = &n;

	// pn2 = &m; // ОШИБКА!!!!

	*pn2 = 15;
	std::cout << *pn2 << std::endl;


	//---------------------------------------------------------------------------
	// константный указатель на константу.
	// не может быть объявлен без инициализации и 
	// не может быть направлен на другую облать памяти\
	// с его пощью также НЕВОЗМОЖНО менять память на которую он направлен

	const int* const pn3 = &n;

	//pn3 = &m;   // ОШИБКА!!!

	// *pn3 = 42; // ОШИБКА!!!

	std::cout << *pn3 << std::endl;


	return 0;
}